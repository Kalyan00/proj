программа дорожки

переменные
  player_f1:array[0..50] of целый;
  player_f2:array[0..50] of целый;
  KOL_KL:целый;
  KOL_DOR:целый;
  HOD:целый;

  GAME:boolean;
  PLAYER_FIRST:boolean;
  PLAY_WHITH_KOMP:boolean;




 {-----------------------------------------------------------------------------}
процедура vvod;
переменые iot-целый;
начало
    вывод('how long  is the  step');
    ввод(HOD);
    вывод('how     many     roads');
    ввод(KOL_DOR);
    вывод('how long  is the  road');
    ввод(KOL_KL);
    вывод('who is the first [1/2]');
    ввод(iot);
    PLAYER_FIRST:= (iot=1);
    вывод('play whith computer [0/1]');
    ввод(iot);
    PLAY_WHITH_KOMP:=  (iot=1);
конец;



 {-----------------------------------------------------------------------------}
процедура hod_pl1;
переменые i,iii: целый;
начало
     iii:=0;
     i:=0;
   ┌─цикл пока iii<KOL_DOR
   │  ┌─если player_f2[iii] ═╪═ 1 то
   │  │   i:=1;
   │  └─кесли
   │    iii:=iii+1;
   └─Кцикл
   ┌─если i=0 то
   │    вывод('PLAYER 1 IS OWER');
   │    game:=false;
   └─Кесли
   ┌─ecли game то
   │    Вывод(' Введите № дорожки');
   │    Ввод(i);
   │    Вывод(' на сколько клеток ходить');
   │    Ввод(iii);
   │    player_f2[i]:=player_f2[i]+iii;
   └─Кесли
     
конец;



 {-----------------------------------------------------------------------------}
процедура hod_pl2;
переменые a,X_old,Y,i,iii: целый;
начало
     iii:=0;
     i:=0;
   ┌─цикл пока iii<KOL_DOR
   │  ┌─если player_f1[iii] ═╪═ KOL_KL-2 то
   │  │   i:=1;
   │  └─кесли
   │    iii:=iii+1;
   └─Кцикл
   ┌─если i=0 то
   │    вывод('PLAYER 2 IS OWER');
   │    game:=false;
   └─Кесли
   ┌─ecли game то
   │    Вывод(' Введите № дорожки');
   │    Ввод(i);
   │    Вывод(' на сколько клеток ходить');
   │    Ввод(iii);
   │    player_f2[i]:=player_f2[i]+iii;
   └─Кесли

конец;


 {-----------------------------------------------------------------------------}
процедура II_PROIGR;                 {исскувств. интеллект}
начало                                {проиграл            }
вывод('PLAYER 2 IS OWER');
game:=false;
конец;







 {-----------------------------------------------------------------------------}
процедура HOD_II;                          {ИСКУВСТВ ИНТЕЛ}
переменые i,j,k:целый;P:array[0..HODMAX] of целый;
начало
┌─цикл i: (0 --> HODMAX)
│     P[i]:=0;           {чистка Р} {заполнение Р}
└─Кцикл
┌─цикл i: (0 --> KOL_DOR -1)
│     inc( P[(player_f2[i]-player_f1[i]-1)mod(HOD+1)] );
└─Кцикл
  i:=0;
┌─если (kol_dor-p[0])mod 2=1 то          { не закрытых дорожек нечетное?}
│       K:=1;                                   {ДА}
│     ┌─цикл  пока P[k]mod 2 = 0
│     │    k:=k+1;
│     └─Кцикл
│     ┌─если(k<=hod) то
│     │    цикл  пока player_f2[i]-player_f1[i]-1)mod(hod+1) ═╪═ k
│     │       inc(i)
│     │    Кцикл
│     ├─иначе
│     │  ┌─цикл  пока  (player_f2[i]-player_f1[i]-1)mod(hod+1)=0
│     │  │    inc(i);
│     │  └─Кцикл
│     └─Кесли
│     ┌─если  i<=KOL_DOR  то
│     │   HOD_II2(i,(player_f2[i]-player_f1[i]-1)mod(hod+1))
│     ├─иначе
│     │   i:=0;
│     │ ┌─цикл   пока  (player_f2[i]=KOL_KL-1)
│     │ │     inc(i);
│     │ └─Кцикл
│     │ ┌─если   i<kol_dor   то
│     │ │     HOD_II2(i,-1)
│     │ ├─иначе
│     │ │     II_PROIGR;
│     │ └─Кесли
│     │
│     └─Кесли
│
├─иначе
│   i:=1;
│ ┌─цикл пока  p[i]mod 2=0
│ │    inc(i);
│ └─Кцикл
│ ┌─если   i<=hod  то
│ │     j:=i+1;
│ │   ┌─цикл  пока  p[j]mod 2=0
│ │   │    inc(j);
│ │   └─Кцикл
│ │   ┌─если(j<=hod)то
│ │   │   k:=0;
│ │   │ ┌─цикл  пока (player_f2[k]-player_f1[k]-1)mod(hod+1) ═╪═ j
│ │   │ │    inc(k);
│ │   │ └─Кцикл
│ │   │   HOD_II2(k,j-i);
│ │   ├─иначе
│ │   │   вывод(chr(7),chr(7),chr(7),chr(7));
│ │   └─Кесли
│ ├─иначе
│ │   i:=0;
│ │ ┌─цикл  пока player_f2[i]-player_f1[i]-1)mod(hod+1)=0
│ │ │    inc(i);
│ │ └─Кцикл
│ │ ┌─если  i<KOL_dor  то
│ │ │    HOD_II2(i,1)
│ │ ├─иначе
│ │ │   i:=0;
│ │ │ ┌─цикл пока (player_f2[i]-player_f1[i]-1)=0
│ │ │ │    inc(i);
│ │ │ └─Кцикл
│ │ │ ┌─если(i<KOL_dor)то
│ │ │ │     HOD_II2(i,1)
│ │ │ ├─иначе
│ │ │ │   i:=0;
│ │ │ │ ┌─цикл  пока  (player_f2[i]=KOL_KL-1)
│ │ │ │ │    inc(i);
│ │ │ │ └─Кцикл
│ │ │ │ ┌─если(i<kol_dor) то
│ │ │ │ │   HOD_II2(i,-1)
│ │ │ │ ├─иначе
│ │ │ │ │   II_PROIGR;
│ │ │ │ └─Кесли
│ │ │ └─Кесли
│ │ └─Кесли
│ └─Кесли
└─Кесли
конец;





 {-----------------------------------------------------------------------------}
процедура game_PLAY;
начало
  ┌─цикл пока  game
  │  ┌─если game то
  │  │   ┌─если  PLAY_WHITH_KOMP то
  │  │   │    HOD_II
  │  │   ├─иначе
  │  │   │    HOD_PL2;
  │  │   └─Кесли
  │  └─Кесли
  │    HOD_PL1;
  └─кцикл;
конец;






 {-----------------------------------------------------------------------------}
начало
    GAME:=TRUE;
    vvod;
  ┌─если PLAYER_FIRST то
  │      HOD_PL1;
  └─Кесли
    GAME_PLAY;
конец.






{}